/* =========================================================
 * ====                   WARNING                        ===
 * =========================================================
 * The code in this tab has been generated from the GUI form
 * designer and care should be taken when editing this file.
 * Only add/edit code inside the event handlers i.e. only
 * use lines between the matching comment tags. e.g.

 void myBtnEvents(GButton button) { //_CODE_:button1:12356:
     // It is safe to enter your event code here  
 } //_CODE_:button1:12356:
 
 * Do not rename this tab!
 * =========================================================
 */

synchronized public void win_draw1(PApplet appc, GWinData data) { //_CODE_:control_window:919491:
  appc.background(230);
} //_CODE_:control_window:919491:

public void gravity_change(GSlider source, GEvent event) { //_CODE_:gravity_slider:839649:
  //println("slider1 - GSlider >> GEvent." + event + " @ " + millis());
  GRAVITY = source.getValueF();
} //_CODE_:gravity_slider:839649:

public void pipe_speed_change(GSlider source, GEvent event) { //_CODE_:pipe_speed_slider:584106:
  //println("slider2 - GSlider >> GEvent." + event + " @ " + millis());
  PIPE_SPEED = source.getValueF();
} //_CODE_:pipe_speed_slider:584106:

public void spacing_change(GSlider source, GEvent event) { //_CODE_:spacing_slider:768018:
  //println("spacing_slider - GSlider >> GEvent." + event + " @ " + millis());
  PIPE_SPACING = source.getValueF();
} //_CODE_:spacing_slider:768018:

public void opening_change(GSlider source, GEvent event) { //_CODE_:opening_slider:964657:
  //println("opening_slider - GSlider >> GEvent." + event + " @ " + millis());
  PIPE_OPENING_SIZE = source.getValueF();
} //_CODE_:opening_slider:964657:

public void speed_change(GSlider source, GEvent event) { //_CODE_:speed_slider:875985:
  //println("speed_slider - GSlider >> GEvent." + event + " @ " + millis());
  stepsPerFrame = source.getValueI();
} //_CODE_:speed_slider:875985:



// Create all the GUI controls. 
// autogenerated do not edit
public void createGUI(){
  G4P.messagesEnabled(false);
  G4P.setGlobalColorScheme(GCScheme.BLUE_SCHEME);
  G4P.setMouseOverEnabled(false);
  surface.setTitle("Sketch Window");
  control_window = GWindow.getWindow(this, "FlappyBot Control Panel", 0, 0, 240, 200, JAVA2D);
  control_window.noLoop();
  control_window.setActionOnClose(G4P.KEEP_OPEN);
  control_window.addDrawHandler(this, "win_draw1");
  gravity_slider = new GSlider(control_window, 118, 11, 100, 40, 10.0);
  gravity_slider.setShowValue(true);
  gravity_slider.setLimits(0.8, 0.1, 2.0);
  gravity_slider.setNumberFormat(G4P.DECIMAL, 2);
  gravity_slider.setOpaque(false);
  gravity_slider.addEventHandler(this, "gravity_change");
  pipe_speed_slider = new GSlider(control_window, 118, 51, 100, 40, 10.0);
  pipe_speed_slider.setShowValue(true);
  pipe_speed_slider.setLimits(2.5, 1.0, 5.0);
  pipe_speed_slider.setNumberFormat(G4P.DECIMAL, 2);
  pipe_speed_slider.setOpaque(false);
  pipe_speed_slider.addEventHandler(this, "pipe_speed_change");
  spacing_slider = new GSlider(control_window, 118, 91, 100, 40, 10.0);
  spacing_slider.setShowValue(true);
  spacing_slider.setLimits(275.0, 250.0, 500.0);
  spacing_slider.setNumberFormat(G4P.DECIMAL, 2);
  spacing_slider.setOpaque(false);
  spacing_slider.addEventHandler(this, "spacing_change");
  opening_slider = new GSlider(control_window, 118, 131, 100, 40, 10.0);
  opening_slider.setShowValue(true);
  opening_slider.setLimits(150.0, 100.0, 300.0);
  opening_slider.setNumberFormat(G4P.DECIMAL, 2);
  opening_slider.setOpaque(false);
  opening_slider.addEventHandler(this, "opening_change");
  speed_slider = new GSlider(control_window, 7, 74, 100, 40, 10.0);
  speed_slider.setLimits(1, 1, 100);
  speed_slider.setNumberFormat(G4P.INTEGER, 0);
  speed_slider.setOpaque(false);
  speed_slider.addEventHandler(this, "speed_change");
  control_window.loop();
}

// Variable declarations 
// autogenerated do not edit
GWindow control_window;
GSlider gravity_slider; 
GSlider pipe_speed_slider; 
GSlider spacing_slider; 
GSlider opening_slider; 
GSlider speed_slider; 
